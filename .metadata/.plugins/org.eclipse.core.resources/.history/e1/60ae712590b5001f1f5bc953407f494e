package com.klef.server.service;

import com.klef.server.entity.Users;
import com.klef.server.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class UserServiceImpl implements UserService {

    private final UserRepository userRepository;

    @Autowired
    public UserServiceImpl(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    // Insert a new user
    @Override
    public String insertUser(Users user) {
        if (userRepository.existsByUname(user.getUname())) {
            return "Username already exists";  // Return message if username exists
        }
        userRepository.save(user);  // Save the user to the database
        return "User inserted successfully!";  // Success message
    }

    // Check if the user exists (for login)
    @Override
    public String checkUser(Users user, String uname, String pwd) {
        Optional<Users> existingUser = userRepository.findByUnameAndPwd(uname, pwd);
        if (existingUser.isPresent()) {
            return "Login successful...";  // Return success message on valid login
        }
        return "Invalid username or password";  // Invalid login credentials
    }

    // Get total number of users
    @Override
    public long getUserCount() {
        return userRepository.count();  // Return the total count of users
    }

    // Get all users from the database
    @Override
    public List<Users> getAllUsers() {
        return userRepository.findAll();  // Return a list of all users
    }

    // Delete a user by ID
    @Override
    public void deleteUser(Long id) {
        userRepository.deleteById(id);  // Delete user by ID
    }

    // Update user details
    @Override
    public Users updateUser(Long id, Users user) {
        Optional<Users> existingUser = userRepository.findById(id);
        if (existingUser.isPresent()) {
            Users updatedUser = existingUser.get();
            updatedUser.setUname(user.getUname());
            updatedUser.setEmail(user.getEmail());
            updatedUser.setPwd(user.getPwd());
            updatedUser.setGender(user.getGender());
            return userRepository.save(updatedUser);  // Save updated user details
        }
        return null;  // Return null if user does not exist
    }
}
